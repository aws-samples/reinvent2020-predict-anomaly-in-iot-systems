CREATE OR REPLACE STREAM "SQL_STREAM_TEMPERATURE" (
    "building_id" VARCHAR(12),
    "temperature" DOUBLE,
    "unit" VARCHAR(12),
    "arrival_time" TIMESTAMP);

CREATE OR REPLACE PUMP "STREAM_PUMP_TEMPERATURE" AS INSERT INTO "SQL_STREAM_TEMPERATURE"
SELECT STREAM 
    s."building_id" as building_id, 
    avg(s."data_value") as temperature, 
    s."unit" as unit,
    STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND) AS "arrival_time"
FROM "SOURCE_SQL_STREAM_001" s
WHERE s."data_type" = 'temperature'
GROUP BY s."building_id", s."unit", STEP(s.ROWTIME BY INTERVAL '1' SECOND), STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND);



CREATE OR REPLACE STREAM "SQL_STREAM_HUMIDITY" (
    "building_id" VARCHAR(12),
    "humidity" DOUBLE,
    "unit" VARCHAR(12),
    "arrival_time" TIMESTAMP);

CREATE OR REPLACE PUMP "STREAM_PUMP_HUMIDITY" AS INSERT INTO "SQL_STREAM_HUMIDITY"
SELECT STREAM 
    s."building_id" as building_id, 
    avg(s."data_value") as humidity, 
    s."unit" as unit,
    STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND) AS "arrival_time"
FROM "SOURCE_SQL_STREAM_001" s
WHERE s."data_type" = 'humidity'
GROUP BY s."building_id", s."unit", STEP(s.ROWTIME BY INTERVAL '1' SECOND), STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND);



CREATE OR REPLACE STREAM "SQL_STREAM_VIBRATION_FREQ" (
    "building_id" VARCHAR(12),
    "vibration_frequency" DOUBLE,
    "unit" VARCHAR(12),
    "arrival_time" TIMESTAMP);

CREATE OR REPLACE PUMP "STREAM_PUMP_VIBRATION_FREQ" AS INSERT INTO "SQL_STREAM_VIBRATION_FREQ"
SELECT STREAM 
    s."building_id" as building_id, 
    avg(s."data_value") as vibration_frequency, 
    s."unit" as unit,
    STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND) AS "arrival_time"
FROM "SOURCE_SQL_STREAM_001" s
WHERE s."data_type" = 'vibration_frequency'
GROUP BY s."building_id", s."unit", STEP(s.ROWTIME BY INTERVAL '1' SECOND), STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND);

CREATE OR REPLACE STREAM "SQL_STREAM_VIBRATION_DISP" (
    "building_id" VARCHAR(12),
    "vibration_displacement" DOUBLE,
    "unit" VARCHAR(12),
    "arrival_time" TIMESTAMP);

CREATE OR REPLACE PUMP "STREAM_PUMP_VIBRATION_DISP" AS INSERT INTO "SQL_STREAM_VIBRATION_DISP"
SELECT STREAM 
    s."building_id" as building_id, 
    avg(s."data_value") as vibration_displacement, 
    s."unit" as unit,
    STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND) AS "arrival_time"
FROM "SOURCE_SQL_STREAM_001" s
WHERE s."data_type" = 'vibration_displacement'
GROUP BY s."building_id", s."unit", STEP(s.ROWTIME BY INTERVAL '1' SECOND), STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND);



-- This is the stream joining the two sets of vibration readings
CREATE OR REPLACE STREAM "SQL_STREAM_VIBRATION_MERGED" (
    "building_id" VARCHAR(12),
    "arrival_time" timestamp,
    "vibration_frequency_value" double,
    "vibration_frequency_unit" VARCHAR(12),
    "vibration_displacement_value" double,
    "vibration_displacement_unit" VARCHAR(12)
);

CREATE OR REPLACE PUMP "STREAM_PUMP_VIBRATION_MERGED" AS INSERT INTO "SQL_STREAM_VIBRATION_MERGED"
SELECT STREAM 
    s1."building_id" as "building_id",
    s1."arrival_time" as "arrival_time",
    s1."vibration_frequency" as "vibration_frequency_value", 
    s1."unit" as "vibration_frequency_unit",
    s2."vibration_displacement" as "vibration_displacement_value", 
    s2."unit" as "vibration_displacement_unit"
FROM "SQL_STREAM_VIBRATION_FREQ" s1 JOIN "SQL_STREAM_VIBRATION_DISP" s2
ON s1."arrival_time"=s2."arrival_time" AND s1."building_id"=s2."building_id";



CREATE OR REPLACE STREAM "VIBRATION_ANOMALY_STREAM" (
            "vibration_frequency_value" DOUBLE,
            "vibration_displacement_value" DOUBLE,
            "arrival_time" TIMESTAMP,
            "ANOMALY_SCORE" DOUBLE,
            "ANOMALY_EXPLANATION" varchar(512));

CREATE OR REPLACE PUMP "VIBRATION_ANOMALY_PUMP" AS 
    INSERT INTO "VIBRATION_ANOMALY_STREAM"
        SELECT STREAM "vibration_frequency_value", "vibration_displacement_value", "arrival_time", ANOMALY_SCORE, ANOMALY_EXPLANATION 
        FROM TABLE(RANDOM_CUT_FOREST_WITH_EXPLANATION(
            CURSOR(SELECT STREAM * FROM "SQL_STREAM_VIBRATION_MERGED"), 100, 100, 100000, 5, true));










CREATE OR REPLACE STREAM "SQL_STREAM_TEMPERATURE" (
    "building_id" VARCHAR(12),
    "temperature" DOUBLE,
    "unit" VARCHAR(12),
    "arrival_time" TIMESTAMP);

CREATE OR REPLACE PUMP "STREAM_PUMP_TEMPERATURE" AS INSERT INTO "SQL_STREAM_TEMPERATURE"
SELECT STREAM 
    s."building_id" as building_id, 
    avg(s."data_value") as temperature, 
    s."unit" as unit,
    STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND) AS "arrival_time"
FROM "SOURCE_SQL_STREAM_001" s 
WHERE s."data_type" = 'temperature'
GROUP BY s."building_id", s."unit", STEP(s.ROWTIME BY INTERVAL '1' SECOND), STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND);

CREATE OR REPLACE STREAM "TEMPERATURE_ANOMALY_STREAM" (
            "temperature" DOUBLE,
            "arrival_time" TIMESTAMP,
            "ANOMALY_SCORE" DOUBLE,
            "ANOMALY_EXPLANATION" varchar(512));

CREATE OR REPLACE PUMP "TEMPERATURE_ANOMALY_PUMP" AS 
    INSERT INTO "TEMPERATURE_ANOMALY_STREAM"
        SELECT STREAM "temperature", "arrival_time", ANOMALY_SCORE, ANOMALY_EXPLANATION 
        FROM TABLE(RANDOM_CUT_FOREST_WITH_EXPLANATION(
            CURSOR(SELECT STREAM * FROM "SQL_STREAM_TEMPERATURE"), 100, 100, 100000, 5, true));







CREATE OR REPLACE STREAM "SQL_STREAM_TEMPERATURE" (
    "building_id" VARCHAR(12),
    "temperature" DOUBLE,
    "unit" VARCHAR(12),
    "arrival_time" TIMESTAMP);

CREATE OR REPLACE PUMP "STREAM_PUMP_TEMPERATURE" AS INSERT INTO "SQL_STREAM_TEMPERATURE"
SELECT STREAM 
    s."building_id" as building_id, 
    avg(s."data_value") as temperature, 
    s."unit" as unit,
    STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND) AS "arrival_time"
FROM "SOURCE_SQL_STREAM_001" s 
WHERE s."data_type" = 'temperature'
GROUP BY s."building_id", s."unit", STEP(s.ROWTIME BY INTERVAL '1' SECOND), STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND);

CREATE OR REPLACE STREAM "TEMPERATURE_ANOMALY_STREAM" (
            "temperature" DOUBLE,
            "arrival_time" TIMESTAMP,
            "ANOMALY_SCORE" DOUBLE,
            "ANOMALY_EXPLANATION" varchar(512));

CREATE OR REPLACE PUMP "TEMPERATURE_ANOMALY_PUMP" AS 
    INSERT INTO "TEMPERATURE_ANOMALY_STREAM"
        SELECT STREAM "temperature", "arrival_time", ANOMALY_SCORE, ANOMALY_EXPLANATION 
        FROM TABLE(RANDOM_CUT_FOREST_WITH_EXPLANATION(
            CURSOR(SELECT STREAM * FROM "SQL_STREAM_TEMPERATURE"), 100, 100, 100000, 5, true));

CREATE OR REPLACE STREAM "TEMPERATURE_ANOMALY_DELTA_STREAM" (
            "temperature" DOUBLE,
            "arrival_time_s1" TIMESTAMP,
            "arrival_time_s2" TIMESTAMP,
            "ANOMALY_SCORE" DOUBLE,
            "ANOMALY_SCORE_DELTA" DOUBLE,
            "ANOMALY_EXPLANATION" varchar(512));

CREATE OR REPLACE PUMP "TEMPERATURE_ANOMALY_DELTA_PUMP" AS 
    INSERT INTO "TEMPERATURE_ANOMALY_DELTA_STREAM"
        SELECT STREAM s1."temperature", s1."arrival_time" as arrival_time_s1, s2."arrival_time" as arrival_time_s2, s1."ANOMALY_SCORE", s2."ANOMALY_SCORE" -  s1."ANOMALY_SCORE" as ANOMALY_SCORE_DELTA, s1."ANOMALY_EXPLANATION" 
        FROM TEMPERATURE_ANOMALY_STREAM OVER (RANGE INTERVAL '2' MINUTE PRECEDING) AS s1 right join TEMPERATURE_ANOMALY_STREAM OVER (RANGE INTERVAL '2' MINUTE PRECEDING) AS s2 on s1."arrival_time" = s2."arrival_time" - INTERVAL '1' SECOND;








CREATE OR REPLACE STREAM "SQL_STREAM_TEMPERATURE" (
    "building_id" VARCHAR(12),
    "temperature" DOUBLE,
    "unit" VARCHAR(12),
    "arrival_time" TIMESTAMP);

CREATE OR REPLACE PUMP "STREAM_PUMP_TEMPERATURE" AS INSERT INTO "SQL_STREAM_TEMPERATURE"
SELECT STREAM 
    s."building_id" as building_id, 
    avg(s."data_value") as temperature, 
    s."unit" as unit,
    STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND) AS "arrival_time"
FROM "SOURCE_SQL_STREAM_001" s 
WHERE s."data_type" = 'temperature'
GROUP BY s."building_id", s."unit", STEP(s.ROWTIME BY INTERVAL '1' SECOND), STEP(s.APPROXIMATE_ARRIVAL_TIME BY INTERVAL '1' SECOND);

CREATE OR REPLACE STREAM "SQL_STREAM_TEMPERATURE_SW" (
    "building_id" VARCHAR(12),
    "temperature" DOUBLE,
    "avg_temperature" DOUBLE,
    "unit" VARCHAR(12),
    "arrival_time" TIMESTAMP);

CREATE OR REPLACE PUMP "STREAM_PUMP_TEMPERATURE_SW" AS INSERT INTO "SQL_STREAM_TEMPERATURE_SW"
SELECT STREAM 
    s."building_id" as building_id, 
    s."temperature" as temperature, 
    avg(s."temperature") over W1 as avg_temperature, 
    s."unit" as unit,
    s."arrival_time" AS "arrival_time"
FROM "SQL_STREAM_TEMPERATURE" s 
WINDOW W1 AS (
        PARTITION BY s."building_id" 
        RANGE INTERVAL '20' SECOND PRECEDING);
